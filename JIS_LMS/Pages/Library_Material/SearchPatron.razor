@page "/Material/Search"
@layout SystemAdminLayout
@using Microsoft.EntityFrameworkCore
@using JIS_LMS.Data;
@using JIS_LMS.Model
@using Microsoft.AspNetCore.Components.Forms
@inject Library_MaterialService Library_MaterialService
@inject LMSDbContext DbContext

@*<h3 style=" margin-top: 50px;font-family: Courier New, Courier, monospace;font-weight: bolder;">Search Patrons</h3>



@if (materials == null)
{
    <p style="color:red">loading....</p>
}


else
{
    <div class="form-group">

        <Select @onchange="materialChange">
            <option value="">-- Select Library Material Type --</option>
            @foreach (var type in Enum.GetValues(typeof(LibraryMaterialType)))
            {


                <option value="@(type)"> @(type)</option>
            }
        </Select>
    </div>

    <div style="visibility:@Bookvisible;">
        <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced" AllowPaging="true" PageSize="8"
                    AllowSorting="true" Data="@books" TItem="Book" Value="@book" ColumnWidth="200px" Style=" font-family:'Courier New';font-weight:bolder">
            <Columns>
                <RadzenGridColumn TItem="Book" Property="ISBN" Title="ISBN" />



            </Columns>
        </RadzenGrid>
    </div>*@

    @*<div style="visibility:@Bookvisible;">
            <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced" AllowPaging="true" PageSize="8"
                        AllowSorting="true" Data="@libraryMaterials" TItem="Library_Material" Value="@libraryMaterial" ColumnWidth="200px" Style=" font-family:'Courier New';font-weight:bolder">
                <Columns>
                    <RadzenGridColumn TItem="Library_Material" Property="Title" Title="Title" />



                </Columns>
            </RadzenGrid>
        </div>*@



}





@*@code
{

    IEnumerable<Library_Material> materials;

    RadzenGrid<Library_Material> materialsGrid;

    LMSDbContext db = new LMSDbContext();

    string materialType { get; set; }
    string Teachervisible = "hidden";
    string Studentvisible = "hidden";

    protected override void OnInitialized()
    {
        materials = DbContext.Library_Material.Include("Book").ToList();

        //libraryMaterials = db.Library_Material.Include("Book");

        books = db.Book.Include("Library_Material");


        patron = patronss.FirstOrDefault();
    }

    //Method to change patron type
    private void MaterialChange(ChangeEventArgs materialEvent)
    {
        materialType = (materialEvent.Value.ToString());

        if (materialType == "Book")
        {
            Studentvisible = "visible";
            Teachervisible = "hidden";
        }

        else if (materialType == "Teacher")
        {
            Teachervisible = "visible";
            Studentvisible = "hidden";
        }

    }
}

@code {
    Library_Material libraryMaterial;
    IQueryable<Patron> libraryMaterials;

    Book book;
    IQueryable<Book> books;

   


}*@
